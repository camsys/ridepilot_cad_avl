:ruby
  center_lat = @provider.viewport_center ? @provider.viewport_center.y : GOOGLE_MAP_DEFAULTS[:viewport][:center_lat]
  center_lng = @provider.viewport_center ? @provider.viewport_center.x : GOOGLE_MAP_DEFAULTS[:viewport][:center_lng]
  zoom = @provider.viewport_zoom || GOOGLE_MAP_DEFAULTS[:viewport][:zoom] || 10

  has_bounds = @provider.region_se_corner.present? && @provider.region_nw_corner.present?

:javascript
  var map;
  var last_log_time;

  // generic info window
  var infoWindow = new google.maps.InfoWindow({
    content: "loading..."
  });

  // set up timer to update date updated time in infoWindow
  if(#{@is_today || false}) {
    var timer = 0;
    var infoUpdateTimer;
    google.maps.event.addListener(infoWindow, 'content_changed', function(event) {
      clearInterval(infoUpdateTimer);
      timer = 0;
      infoUpdateTimer = setInterval(function() { 
        $('.info_update_time').text('Data updated ' + (++ timer) + ' seconds ago'); 
      }, 1000);
    });

    // one method to refresh map data
    function refreshMap() {
      last_log_time = new Date();
      console.log('refreshing map...');
      $('.run_list input:checked').each(function() {
        reloadRun($(this).data('run-id'));
      });
    }
    
    // refresh map on interval
    function refreshMapOnInterval() {
      setInterval(function() {
        refreshMap();
      }, #{ApplicationSetting['cad_avl.gps_interval_seconds'] || 30} * 1000);
    }
    refreshMapOnInterval();
  }


  $(function(){
    function resizeMapContainer() {
      // set height as: window size - (page header + footer)
      $('#map').height($(window).height() - 100);  
    }

    function resizeMap() {
      resizeMapContainer();
      var center = map.getCenter();
      google.maps.event.trigger(map, "resize");
      map.setCenter(center);
    } 
     
    function initMap() {
      map = new google.maps.Map(document.getElementById('map'), {
        center: {lat: #{center_lat}, lng: #{center_lng}},
        zoom: #{zoom}
      });

      if(#{has_bounds || false}) {
        var bounds = new google.maps.LatLngBounds(
          new google.maps.LatLng(#{@provider.region_se_corner.try(:y) || (center_lat - 5)}, #{@provider.region_nw_corner.try(:x) || (center_lng + 5)}),
          new google.maps.LatLng(#{@provider.region_nw_corner.try(:y) || (center_lat + 5)}, #{@provider.region_se_corner.try(:x) || (center_lng - 5)})
        );

        map.fitBounds(bounds);
      }
    }

    // create map
    resizeMapContainer();
    initMap();

    // resize map (listen to resize stop event, so no need to re-calculate size all the time before stop)
    $(window).resize(function() {
      clearTimeout(window.resizedFinished);
      window.resizedFinished = setTimeout(function(){
        resizeMap();
      }, 250);
    });
  });
  
