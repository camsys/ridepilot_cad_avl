:javascript
  // store list of stop markers
  var stop_markers = {};
  
  // draw run stop location on map
  function drawRunStop(itin_data) {
    if(!itin_data || itin_data.length == 0) {
      return;
    }

    var itin_id = itin_data[0];
    var lat = itin_data[1];
    var lng = itin_data[2];
    var run_id = itin_data[3];
    var leg_flag = itin_data[4];
    var stats_code = itin_data[5];

    // define marker 
    var marker = new google.maps.Marker({
      position: {lat: lat, lng: lng},
      icon: getIcon(leg_flag),
      label: getMarkerLabel(leg_flag),
      draggable: true,
      map: map
    });

    // save reference as need to hide marker
    if(!stop_markers[run_id]) {
      stop_markers[run_id] = [];
    }
    stop_markers[run_id].push(marker);

    marker.addListener('click', function() {
      infoWindow.open(map, marker);
      infoWindow.setContent('loading...');

      //ajax request content
      requestStopInfo(itin_id);
    });

    if(infoWindow.getMap() && infoWindow.type == 'Stop' && infoWindow.itin_id == itin_id) {
      // re-load info window
      new google.maps.event.trigger( marker, 'click' );
    }
  }

  function getIcon(type) {
    var icon;
    switch(type) {
      case 0:
      case 3:
        // garage 
        icon = {
          path: 'M -2,-2 2,-2 2,2 -2,2 z',
          strokeColor: 'red',
          fillColor: 'red',
          fillOpacity: 1,
          scale: 4
        };
        break;
      case 1:
        // pickup
        icon = {
          path: google.maps.SymbolPath.CIRCLE,
          strokeColor: 'blue',
          scale: 8,
          strokeWeight: 4
        }
        break;
      case 2:
        // dropoff
        icon = {
          path: google.maps.SymbolPath.CIRCLE,
          strokeColor: 'black',
          scale: 8,
          strokeWeight: 4
        }
        break;
      default:
        break;
    }

    return icon;
  }

  function getMarkerLabel(type) {
    var label;
    switch(type) {
      case 0:
      case 3:
        // garage 
        label = {
          text: "G",
          fontWeight: "bold",
          fontSize: '12px',
          color: 'white'
        };
        break;
      case 1:
        // pickup
        label = {
          text: "P",
          fontWeight: "bold",
          fontSize: '10px',
          color: 'blue'
        };
        break;
      case 2:
        // dropoff
        label = {
          text: "D",
          fontWeight: "bold",
          fontSize: '10px',
          color: 'black'
        };
        break;
      default:
        break;
    }

    return label;
  }

  // remove stop markers for a run
  function removeRunStops(run_id) {
    if(stop_markers[run_id] && stop_markers[run_id].length > 0) {
      stop_markers[run_id].forEach(function(marker) {
        marker.setMap(null);
      });

      delete stop_markers[run_id];
    }
  }

  function requestStopInfo(itin_id) {
    $.ajax({
      url: "#{stop_info_cad_path}",
      data: {
        itinerary_id: itin_id
      }
    });
  }